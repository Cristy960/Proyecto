@model Proyecto.Models.Requerimiento

@{
    ViewBag.Title = "Editar Requerimimento";
}
<h2>@ViewBag.Title</h2>


<body onload="Desabilitar();">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.nombreProyecto_FK)

            @Html.HiddenFor(model => model.idModulo_FK)

            @Html.HiddenFor(model => model.nombre)@*Debo ver el nombre donde estoy y debe ser solo lectura*@


            <div class="form-group">
                @Html.LabelFor(model => model.Modulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (TempData["Modulos"] != null)
                    {
                        @Html.DropDownList("modulos", new SelectList(TempData["Modulos"] as List<string>), "Seleccione el nuevo modulo")
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.complejidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (TempData["Complejidad"] != null)
                    {
                        @Html.DropDownList("complejidad", new SelectList(TempData["Complejidad"] as List<string>), "----------")
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = " Desarrollador text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.duracionReal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.duracionReal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.duracionReal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cedulaResponsable_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @if (TempData["Responsables"] != null)
                    {
                        @Html.DropDownList("responsable", new SelectList(TempData["Responsables"] as List<string>), "Seleccione el nuevo responsable")
                    }
                </div>
            </div>


        </div>

        <div class="botones text-center">
            <input type="submit" value="Aceptar" class="btn btn-success text-center" />
            <a href="~/Requerimiento/Index" class="btn btn-default text-center">
                Regresar
            </a>

        </div>
    }

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }


    <script>
        function Desabilitar() {
            var rol = '@ViewBag.user';
            var lista = document.getElementsByClassName(rol);
            for (var i = 0; i < lista.length; ++i) {
                lista[i].hidden = true;
            }
        }
    </script>
</body>
